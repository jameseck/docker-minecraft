#!/bin/bash

FORGE_SITE="http://files.minecraftforge.net/maven/net/minecraftforge/forge"

die () {
  echo $*
  exit 1
}

[ ! -d /data ] && die "Data directory does not exist"

# If data directory has data, set variable so we don't download the forge installer
if [ -z "$(ls -A /data)" ]; then
  echo "Data dir empty"
  DATA_DIR_EMPTY=1
else
  echo "Data dir not empty"
  DATA_DIR_EMPTY=0
fi

if [ ! -d /data/server ]; then
  echo "Creating /data/server directory"
  mkdir /data/server || die "Failed to create directory /data/server"
fi

FORGE_INSTALLER_JAR="forge-${MINECRAFT_VERSION}-${FORGE_VERSION}-${MINECRAFT_VERSION}-installer.jar"
[ -z ${FORGE_URL} ] && FORGE_URL="${FORGE_SITE}/${MINECRAFT_VERSION}-${FORGE_VERSION}-${MINECRAFT_VERSION}/${FORGE_INSTALLER_JAR}"
FORGE_JAR="forge-${MINECRAFT_VERSION}-${FORGE_VERSION}-${MINECRAFT_VERSION}-universal.jar"

if [ ! -z "$FML_CONFIRM" ]; then
  FML_CONFIRM="-Dfml.queryResult=${FML_CONFIRM}"
else
  FML_CONFIRM=""
fi

cat <<EOF > /data/server/start.sh
#!/bin/bash
echo "Starting Minecraft server..."
cd /data/server/
exec java -Xms\${MINECRAFT_MINHEAP} -Xmx\${MINECRAFT_MAXHEAP} ${FML_CONFIRM} -jar ${FORGE_JAR} \${JAVA_OPTS}
EOF
chmod +x /data/server/start.sh

[ "$DATA_DIR_EMPTY" == "0" ] && exit 0

echo "Downloading Forge Installer ${FORGE_URL}"
curl -o /tmp/${FORGE_INSTALLER_JAR} ${FORGE_URL}
[ "$?" != "0" ] && die "curl command failed"
cd /data/server && java -jar /tmp/${FORGE_INSTALLER_JAR} --installServer
[ "$?" != "0" ] && die "Forge java installer failed"
rm -f /tmp/${FORGE_INSTALLER_JAR}

[ ! -f /data/server/eula.txt ] && touch /data/server/eula.txt
[ "$(grep 'eula=true' /data/server/eula.txt)" == "" ] && cat <<'EOF' > /data/server/eula.txt
eula=true
EOF
